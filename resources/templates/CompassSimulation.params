-Dbacktest.manage.clientTrades=true \
com.x.integration.analytics.CompassSimulationProcess \
--name=backtest \
--env=local-live,backtest \
--loadConfig=${configurationS3Url}/<% out << (params.client_name.contains("-") ? params.client_name.split("-")[0].toUpperCase(): params.client_name.toUpperCase()) %>/<% out << (params.client_name.contains("-") ? params.client_name.split("-")[0].toUpperCase(): params.client_name.toUpperCase()) %>_config-update.json.gz \
<% out << (params.disableFastMarkets != null && params.disableFastMarkets == false ? " ": " --forceConfig=pricing.fastmarket.config=null" ) %> \
--forceConfig=risk.varEquivalentRisk.maxVarLevel=double:<% out << (params.maxVarLevel != null && params.maxVarLevel != "" ? params.maxVarLevel: maxVarLevel ) %> \
--forceConfig=hedging.rules.aggressive.dynamicOrderSpeedScaling=double:${params.dynamicOrderSpeedScaling} \
--forceConfig=analytics.enrichedTradeOutput.persist=boolean:false \
--forceConfig=analytics.enrichedTradeOutputSummary.persist=boolean:false \
--forceConfig=analytics.hedgingDecisions.persist=boolean:false \
<% out << (params.hybridInstrumentToProfileMappings != null && params.hybridInstrumentToProfileMappings != "" ? " --forceConfig=hedging.rules.profiles.instrumentToProfileMappings=json:${params.hybridInstrumentToProfileMappings}": " " ) %> \
--graphBuilderHelperFactory=com.x.processbuilder.SimulationGraphBuilderHelperFactory \
--jmsStoreUrl=s3://${tickStoreS3Bucket}/<% out << (params.client_name.contains("-") ? params.client_name.split("-")[0]: params.client_name) %>/${tradingHost}/jmsFilePersisterSystemGuaranteed1 \
--tickStoreUrl=s3://${tickStoreS3Bucket}/<% out << (params.client_name.contains("-") ? params.client_name.split("-")[0]: params.client_name) %>/${tradingHost}/starfishFilePersisterExternalMarketData1 \
--outPath="${outputPath}" \
--client=<% out << (params.client_name.contains("-") ? params.client_name.split("-")[0]: params.client_name) %> \
--jobId=$env.BUILD_TAG \
--jobDescription="'${params.description.replaceAll("\\s","")}'" \
--from="${params.from}" \
--to="${params.to}" \
<% out << (params.additionalArgs != null && params.additionalArgs != "" ? params.additionalArgs.split(/[\r\n]/).collect { it.trim() == ''? '' : '\'' + it.trim().replace('\'', '\'\\\'\'') + '\'' }.join(' '): " " ) %> \
<% out << (delegate.hasVariable('topLevelArgs')? topLevelArgs.collect { it }.join(' '): " " ) %> \
<% out << (params.positionsS3Url != null && params.positionsS3Url != ""? "--positionsInput=${params.positionsS3Url}": " " ) %>
